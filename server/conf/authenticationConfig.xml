<?xml version="1.0" encoding="UTF-8"?>
<tns:loginConfiguration xmlns:tns="http://www.worklight.com/auth/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

		<!-- Licensed Materials - Property of IBM
			 5725-I43 (C) Copyright IBM Corp. 2006, 2013. All Rights Reserved.
			 US Government Users Restricted Rights - Use, duplication or
             disclosure restricted by GSA ADP Schedule Contract with IBM Corp. -->	

	 <staticResources>
	 <!--  
	   		<resource id="logUploadServlet" securityTest="LogUploadServlet">
			<urlPatterns>/apps/services/loguploader*</urlPatterns>
		</resource>
		-->
		<resource id="subscribeServlet" securityTest="SubscribeServlet">
			<urlPatterns>/subscribeSMS*;/receiveSMS*;/ussd*</urlPatterns>
		</resource>
		
	</staticResources> 

   <!--  Sample security tests  
         Even if not used there will be some default webSecurityTest and mobileSecurityTest 
         
		 Attention: If you are adding an app authenticity realm to a security test, 
		 you must also update the application-descriptor.xml. Please refer to the user documentation 
		 on application authenticity for environment specific guidelines. -->   
         
	 <securityTests>
       <customSecurityTest name="BlogAuthentication">
       	<test realm="BlogRealm" isInternalUserID="true"/>
       </customSecurityTest>
       	<customSecurityTest name="SubscribeServlet">
       		<test realm="SubscribeServlet" isInternalUserID="true"/>
       	</customSecurityTest>    		

	</securityTests> 
	
	<realms>
		<realm name="SampleAppRealm" loginModule="StrongDummy">
			<className>com.worklight.core.auth.ext.FormBasedAuthenticator</className>
		</realm>
		
		<realm name="SubscribeServlet" loginModule="rejectAll">
			<className>com.worklight.core.auth.ext.HeaderAuthenticator</className>			
		</realm>
		<realm loginModule="AuthLoginModule" name="BlogRealm">
	   		<className>com.worklight.integration.auth.AdapterAuthenticator</className>
	   		<parameter name="login-function" value="loginAdapter.onAuthRequired"></parameter>
	   		<parameter name="logout-function" value="loginAdapter.onLogout"></parameter>
   		</realm>
	</realms>

	<loginModules>
		<loginModule name="AuthLoginModule">
    		<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className>
    	</loginModule>
		<loginModule name="StrongDummy">
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className>
		</loginModule>
		
		<loginModule name="requireLogin">
			<className>com.worklight.core.auth.ext.SingleIdentityLoginModule</className>
		</loginModule>
		
		<loginModule name="rejectAll">
			<className>com.worklight.core.auth.ext.RejectingLoginModule</className>
		</loginModule>
		
		<!-- Required for Trusteer - wl_basicTrusteerFraudDetectionRealm -->		
		<!-- loginModule name="trusteerFraudDetectionLogin">
			<className>com.worklight.core.auth.ext.TrusteerLoginModule</className>
		</loginModule-->
		
		<!-- For websphere -->
		<!-- loginModule name="WASLTPAModule">
      		<className>com.worklight.core.auth.ext.WebSphereLoginModule</className>
    	</loginModule -->
    	
    	<!-- Login module for User Certificate Authentication -->
    	<!-- <loginModule name="WLUserCertificateLoginModule">
			<className>com.worklight.core.auth.ext.UserCertificateLoginModule</className>
		</loginModule> -->
		
		
    	<!-- For enabling SSO with no-provisioning device authentication -->
    	<!-- <loginModule name="MySSO" ssoDeviceLoginModule="WLDeviceNoProvisioningLoginModule">
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className>
		</loginModule> -->
		
		
    	<!-- For enabling SSO with auto-provisioning device authentication -->
    	<!-- <loginModule name="MySSO" ssoDeviceLoginModule="WLDeviceAutoProvisioningLoginModule">
			<className>com.worklight.core.auth.ext.NonValidatingLoginModule</className>
		</loginModule> -->
	</loginModules>

</tns:loginConfiguration>
